-- Generated by Oracle SQL Developer Data Modeler 3.3.0.747
--   at:        2014-10-15 20:25:01 CEST
--   site:      SQL Server 2008
--   type:      SQL Server 2008
-- 	 author: 	Pawel Cejrowski
--   author: 	Robert Kozakiewicz
-- 	 group: 	5E
-- USE master -- be sure that you're not on MYDB
-- ALTER DATABASE [maxikino_source] SET SINGLE_USER WITH ROLLBACK IMMEDIATE
-- DROP DATABASE [maxikino_source]
-- GO
CREATE DATABASE [maxikino_source]
GO
USE [maxikino_source]
GO
--  Rodzaje biletow sprzedawanych w kinach
CREATE
  TABLE Bilet
  (
    Rodzaj         VARCHAR (20) NOT NULL ,
    Cena_normalny  NUMERIC ,
    Cena_ulgowy    NUMERIC ,
    Technologia    CHAR (2) ,
    Dubbing        CHAR (1) ,
    Dzień_tygodnia NUMERIC (1) ,
    CONSTRAINT Bilet_PK PRIMARY KEY CLUSTERED (Rodzaj)
WITH
  (
    ALLOW_PAGE_LOCKS = ON ,
    ALLOW_ROW_LOCKS  = ON
  ))

--  Dystrybutor filmow
CREATE
  TABLE Dystrybutor
  (
    Nazwa_dystrybutora VARCHAR (50) NOT NULL ,
    Numer_konta        NUMERIC (26) ,
    CONSTRAINT Dystrybutor_PK PRIMARY KEY CLUSTERED (Nazwa_dystrybutora)
WITH
  (
    ALLOW_PAGE_LOCKS = ON ,
    ALLOW_ROW_LOCKS  = ON
  ))

--  Film, ktory byl wyswietlany w sieci kin
CREATE
  TABLE Film
  (
    Tytul       VARCHAR (50) NOT NULL ,
    Rezyser     VARCHAR (50) NOT NULL ,
    Rok_wydania VARCHAR (50) NOT NULL ,
    Producent   VARCHAR (50) NOT NULL ,
    Gatunek     VARCHAR (50) ,
    CONSTRAINT Film_PK PRIMARY KEY CLUSTERED (Tytul)
WITH
  (
    ALLOW_PAGE_LOCKS = ON ,
    ALLOW_ROW_LOCKS  = ON
  ))

--  Kina wchodzace w sklad sieci kin
CREATE
  TABLE Kino
  (
    Nazwa                   VARCHAR (50) NOT NULL ,
    Miasto                  VARCHAR (50) NOT NULL ,
    Ulica                   VARCHAR (50) ,
    Numer_budynku           NUMERIC ,
    Pracownik_ID_pracownika NUMERIC NOT NULL ,
    CONSTRAINT Kino_PK PRIMARY KEY CLUSTERED (Nazwa, Miasto)
WITH
  (
    ALLOW_PAGE_LOCKS = ON ,
    ALLOW_ROW_LOCKS  = ON
  ))

--  Pracownicy sieci kin
CREATE
  TABLE Pracownik
  (
    ID_pracownika     NUMERIC NOT NULL ,
	PESEL			  VARCHAR (11) not null,
    Imię              VARCHAR (50) NOT NULL ,
    Imię2             VARCHAR (50) NOT NULL ,
    Nazwisko          VARCHAR (50) ,
    Data_zatrudnienia DATE ,
    Kino_Nazwa        VARCHAR (50) NOT NULL ,
    Kino_Miasto       VARCHAR (50) NOT NULL ,
    CONSTRAINT Pracownik_PK PRIMARY KEY CLUSTERED (ID_pracownika)
WITH
  (
    ALLOW_PAGE_LOCKS = ON ,
    ALLOW_ROW_LOCKS  = ON
  ))

--  Sale kinowe
CREATE
  TABLE Sala
  (
    Numer_sali     NUMERIC NOT NULL ,
    Ilosc_miejsc NUMERIC ,
    Kino_Nazwa     VARCHAR (50) NOT NULL ,
    Kino_Miasto    VARCHAR (50) NOT NULL ,
    CONSTRAINT Sale_PK PRIMARY KEY CLUSTERED (Numer_sali, Kino_Nazwa,
    Kino_Miasto)
WITH
  (
    ALLOW_PAGE_LOCKS = ON ,
    ALLOW_ROW_LOCKS  = ON
  ))

--  Seans filmu w kinie
CREATE
  TABLE Seans
  (
    IDseans                NUMERIC NOT NULL ,
    Data                   DATETIME NOT NULL ,
    Koszt_seansu           NUMERIC ,
    Cena_biletu_normalnego NUMERIC ,
    Cena_biletu_ulgowego   NUMERIC ,
    Bilet_Rodzaj           VARCHAR (20) NOT NULL ,
    Film_Tytul             VARCHAR (50) NOT NULL ,
    Sala_Numer_sali        NUMERIC NOT NULL ,
    Sala_Kino_Nazwa        VARCHAR (50) NOT NULL ,
    Sala_Kino_Miasto       VARCHAR (50) NOT NULL ,
    CONSTRAINT Seans_PK PRIMARY KEY CLUSTERED (IDseans)
WITH
  (
    ALLOW_PAGE_LOCKS = ON ,
    ALLOW_ROW_LOCKS  = ON
  ))

--  Sprzedaz biletu w kinie klientowi
CREATE
  TABLE SprzedazBiletu
  (
    Data_sprzedazy          DATETIME NOT NULL ,
    Ilosz_sztuk_normalny  NUMERIC ,
    Ilosc_sztuk_ulgowy      NUMERIC ,
    Pracownik_ID_pracownika NUMERIC NOT NULL ,
    Seans_IDseans           NUMERIC NOT NULL ,
    CONSTRAINT SprzedazBiletu_PK PRIMARY KEY CLUSTERED (Data_sprzedazy,
    Pracownik_ID_pracownika)
WITH
  (
    ALLOW_PAGE_LOCKS = ON ,
    ALLOW_ROW_LOCKS  = ON
  ))

--  Zakup mozliwosci emisji filimu przez kino
CREATE
  TABLE ZakupFilmu
  (
    IDzakupu                       NUMERIC NOT NULL ,
    Data_zakupu                    DATE ,
    Pracownik_ID_pracownika        NUMERIC NOT NULL ,
    Film_Tytul                     VARCHAR (50) NOT NULL ,
    Dystrybutor_Nazwa_dystrybutora VARCHAR (50) NOT NULL ,
    Cena                           NUMERIC ,
    Liczba_emisji                  NUMERIC ,
    CONSTRAINT ZakupFilmu_PK PRIMARY KEY CLUSTERED (IDzakupu)
WITH
  (
    ALLOW_PAGE_LOCKS = ON ,
    ALLOW_ROW_LOCKS  = ON
  ))

ALTER TABLE SprzedazBiletu
ADD CONSTRAINT dotyczy FOREIGN KEY
(
Seans_IDseans
)
REFERENCES Seans
(
IDseans
)
ON
DELETE
  NO ACTION ON
UPDATE NO ACTION
GO

ALTER TABLE ZakupFilmu
ADD CONSTRAINT dystrybuuje FOREIGN KEY
(
Dystrybutor_Nazwa_dystrybutora
)
REFERENCES Dystrybutor
(
Nazwa_dystrybutora
)
ON
DELETE
  NO ACTION ON
UPDATE NO ACTION
GO

ALTER TABLE Seans
ADD CONSTRAINT emituje FOREIGN KEY
(
Film_Tytul
)
REFERENCES Film
(
Tytul
)
ON
DELETE
  NO ACTION ON
UPDATE NO ACTION
GO

ALTER TABLE Kino
ADD CONSTRAINT kieruje FOREIGN KEY
(
Pracownik_ID_pracownika
)
REFERENCES Pracownik
(
ID_pracownika
)
ON
DELETE
  NO ACTION ON
UPDATE NO ACTION
GO

ALTER TABLE ZakupFilmu
ADD CONSTRAINT kupuje FOREIGN KEY
(
Film_Tytul
)
REFERENCES Film
(
Tytul
)
ON
DELETE
  NO ACTION ON
UPDATE NO ACTION
GO

ALTER TABLE ZakupFilmu
ADD CONSTRAINT nadzoruje FOREIGN KEY
(
Pracownik_ID_pracownika
)
REFERENCES Pracownik
(
ID_pracownika
)
ON
DELETE
  NO ACTION ON
UPDATE NO ACTION
GO

ALTER TABLE SprzedazBiletu
ADD CONSTRAINT obsluguje FOREIGN KEY
(
Pracownik_ID_pracownika
)
REFERENCES Pracownik
(
ID_pracownika
)
ON
DELETE
  NO ACTION ON
UPDATE NO ACTION
GO

ALTER TABLE Seans
ADD CONSTRAINT odbywa_sie FOREIGN KEY
(
Sala_Numer_sali,
Sala_Kino_Nazwa,
Sala_Kino_Miasto
)
REFERENCES Sala
(
Numer_sali ,
Kino_Nazwa ,
Kino_Miasto
)
ON
DELETE
  NO ACTION ON
UPDATE NO ACTION
GO

ALTER TABLE Seans
ADD CONSTRAINT wedlug FOREIGN KEY
(
Bilet_Rodzaj
)
REFERENCES Bilet
(
Rodzaj
)
ON
DELETE
  NO ACTION ON
UPDATE NO ACTION
GO

ALTER TABLE Pracownik
ADD CONSTRAINT zatrudnia FOREIGN KEY
(
Kino_Nazwa,
Kino_Miasto
)
REFERENCES Kino
(
Nazwa ,
Miasto
)
ON
DELETE
  NO ACTION ON
UPDATE NO ACTION
GO

ALTER TABLE Sala
ADD CONSTRAINT znajduje_sie FOREIGN KEY
(
Kino_Nazwa,
Kino_Miasto
)
REFERENCES Kino
(
Nazwa ,
Miasto
)
ON
DELETE
  NO ACTION ON
UPDATE NO ACTION
GO


-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             9
-- CREATE INDEX                             0
-- ALTER TABLE                             11
-- CREATE VIEW                              0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE DATABASE                          0
-- CREATE DEFAULT                           0
-- CREATE INDEX ON VIEW                     0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE ROLE                              0
-- CREATE RULE                              0
-- CREATE PARTITION FUNCTION                0
-- CREATE PARTITION SCHEME                  0
-- 
-- DROP DATABASE                            0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
